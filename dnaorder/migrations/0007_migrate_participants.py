# Generated by Django 3.2.25 on 2025-08-14 20:38

from django.db import migrations


def forwards(apps, schema_editor):
    Submission = apps.get_model('dnaorder', 'Submission')
    Participant = apps.get_model('dnaorder', 'Participant')

    # Get all participant relations from the implicit M2M table
    through_table = Submission.participants.through
    relations = through_table.objects.all()

    # Prepare BookAuthor instances
    participant_instances = [
        Participant(submission_id=rel.submission_id, user_id=rel.user_id)
        for rel in relations
    ]

    # Bulk create
    Participant.objects.bulk_create(participant_instances, ignore_conflicts=True)

    # Validate
    User = apps.get_model('auth', 'User')

    for submission in Submission.objects.all():
        original_participants = set(submission.participants.all())
        migrated_participants = set(User.objects.filter(temp_participants__submission=submission))
        if (original_participants != migrated_participants):
            raise Exception(f"Participant migration failed for submission {submission.id}")

class Migration(migrations.Migration):

    dependencies = [
        ('dnaorder', '0006_participant'),
    ]

    operations = [
        migrations.RunPython(forwards),
    ]


"""
from django.contrib.auth.models import User
from dnaorder.models import *

for submission in Submission.objects.all():
    original_participants = set(submission.participants.all())
    migrated_participants = set(User.objects.filter(temp_participants__submission=submission))
    # print("{}:{}".format(len(original_participants), len(migrated_participants)))
    assert original_participants == migrated_participants

"""