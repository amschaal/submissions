# The manifest for the "demo" environment.
# Read the full specification for the "Environment" type at:
#  https://aws.github.io/copilot-cli/docs/manifest/environment/

# Your environment name will be used in naming your resources like VPC, cluster, etc.
name: demo
type: Environment
count: 1
deployment:            # The deployment strategy for the "test" environment.
  rolling: 'recreate' # Stops existing tasks before new ones are started for faster deployments.
# Ideally wouldn't be committing this to github, but may need to do so for codedeploy pipeline.  
# Should not be a real security issue, but it would be better to keep it in parameter store if possible.
network:
  vpc:
    id: vpc-86d4e8e1
    security_groups: [sg-bf78d7c2]
    subnets:
      public:
        - id: subnet-e8e9d2b3
        - id: subnet-6b09e60d
# variables:
#   SQL_ENGINE: 'django.db.backends.postgresql'
#   SQL_HOST: 'submissions-test.c1cghbvknbjz.us-west-1.rds.amazonaws.com'
#   SQL_PORT: 5431
#   # SQL_DATABASE: 'demo'
#   SQL_USER: 'demo'
#   SQL_PASSWORD: 'demo'
#   DEBUG: 1
#   SECRET_KEY: 'somethingreallylongandrandom'
#   DJANGO_ALLOWED_HOSTS: 'localhost 127.0.0.1 [::1] demo.coreomics.com coreo-publi-lv2602mii190-63184342.us-west-1.elb.amazonaws.com'
#   BASE_URI: 'http://coreo-publi-lv2602mii190-63184342.us-west-1.elb.amazonaws.com'
#   CORS_ORIGIN_WHITELIST: 'https://demo.coreomics.com'
#   CSRF_TRUSTED_ORIGINS: 'https://demo.coreomics.com'
#   CORS_ALLOW_HEADERS: 'X-XSRF-TOKEN'

# Configure the load balancers in your environment, once created.
# http:
#   public:
#   private:

# Configure observability for your environment resources.
observability:
  container_insights: false
